let Nat  : _ = (N : _) -> (N -> N) -> N -> N
  ; five : Nat = \N s z. s (s (s (s (s z))))
  ; add  : Nat -> Nat -> Nat = \a b N s z. a _ s (b _ s z)
  ; mul  : Nat -> Nat -> Nat = \a b N s z. a _ (b _ s) z
  ; ten      : _ = add five five
  ; hundred  : _ = mul ten ten
  ; thousand : _ = mul ten hundred
 in thousand
