Eq : ∀ {A} → A → A → Type = λ {A} x y → ∀ (P : A → Type) → P x → P y
refl : ∀ {A} {x : A} → Eq x x = λ _ px → px
Nat = ∀ {A} → Rec #{ z : A; s : A → A } → A
0 : Nat = λ r → r.z
1 : Nat = λ r → r.s r.z
2 : Nat = λ r → r.s (r.s r.z)
add : Nat → Nat → Nat = λ x y r → x rec{ z := y r | r }
mul : Nat → Nat → Nat
    = λ x y {A} r → x rec{ s := λ (a : A) → y rec{ z := a | r } | r }
mul' : Nat → Nat → Nat = λ x y → y rec{ z = 0; s = add x }
pow : Nat → Nat → Nat = λ x y → y rec{ z = 1; s = mul' x }
4 = add 2 2
8 = mul 2 4
16 = mul 4 4
p : Eq {Nat} (mul 16 16) (pow 2 8) = refl
p
